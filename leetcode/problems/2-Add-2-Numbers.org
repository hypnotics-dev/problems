* [[https://leetcode.com/problems/add-two-numbers/][Problem]]


You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example 1:

#+begin_example
Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
#+end_example

Example 2:

#+begin_example
Input: l1 = [0], l2 = [0]
Output: [0]
#+end_example

Example 3:

#+begin_example
Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]
#+end_example

 

Constraints:

#+begin_example
    The number of nodes in each linked list is in the range [1, 100].
    0 <= Node.val <= 9
    It is guaranteed that the list represents a number that does not have leading zeros.
#+end_example

* Java Solution 

#+begin_example
../java/2.java
#+end_example
Runtime: 1ms (86% solutions, beats remainder)
Memory: 44.66 MB (9.54% solution, beats 25.02%)

